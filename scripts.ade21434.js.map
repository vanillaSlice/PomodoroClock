{"version":3,"sources":["../package.json","scripts/index.js"],"names":["module","exports","name","version","description","keywords","homepage","bugs","url","email","license","author","repository","type","scripts","test","start","build","devDependencies","acorn","autoprefixer","eslint","stylelint","private","startTime","timerIntervalId","bodyElement","document","querySelector","breakLengthElement","decreaseBreakBtnElement","increaseBreakBtnElement","sessionLengthElement","decreaseSessionBtnElement","increaseSessionBtnElement","fillElement","modeElement","remainingTimeElement","startBtnElement","stopBtnElement","clearBtnElement","versionElement","breakLengthInMinutes","sessionLengthInMinutes","mode","timerLength","originalTimerLength","remainingTime","isStopped","minutesToMilliseconds","minutes","formatTime","time","parseInt","seconds","updateBreakLength","length","innerText","Date","now","style","height","updateSessionLength","switchMode","setAttribute","updateRemainingTime","elapsedTime","updateFillElement","complete","updateTimer","handleStartBtnClick","setInterval","handleStopBtnClick","clearInterval","handleClearBtnClick","removeAttribute","addEventListener"],"mappings":"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","file":"scripts.ade21434.js","sourceRoot":"../src","sourcesContent":["module.exports={name:\"pomodoro-clock\",version:\"1.1.0\",description:\"Advanced Front End Development Project for FreeCodeCamp\",keywords:[\"pomodoro clock\",\"freecodecamp\"],homepage:\"https://pomodoro.mikelowe.xyz/\",bugs:{url:\"https://github.com/vanillaSlice/PomodoroClock/issues\",email:\"mikelowedev@gmail.com\"},license:\"MIT\",author:{name:\"Mike Lowe\",email:\"mikelowedev@gmail.com\",url:\"https://www.mikelowe.xyz/\"},repository:{type:\"git\",url:\"https://github.com/vanillaSlice/PomodoroClock.git\"},scripts:{test:\"run-s test:*\",\"test:lint\":\"run-s test:lint:*\",\"test:lint:css\":\"stylelint src/**/*.css\",\"test:lint:js\":\"eslint src/**/*.js\",start:\"parcel src/index.html -d build\",build:\"parcel build src/index.html -d build --public-url ./\"},devDependencies:{acorn:\"^6.0.6\",autoprefixer:\"^9.4.7\",eslint:\"^5.13.0\",\"eslint-config-airbnb-base\":\"^13.1.0\",\"eslint-plugin-import\":\"^2.16.0\",\"npm-run-all\":\"^4.1.5\",\"parcel-bundler\":\"^1.12.3\",\"parcel-plugin-browserconfig\":\"^1.0.0\",stylelint:\"^9.10.1\",\"stylelint-config-recommended\":\"^2.1.0\"},private:!0};","import { version } from '../../package.json';\n\n/*\n * DOM Elements\n */\n\nconst bodyElement = document.querySelector('.js-body');\nconst breakLengthElement = document.querySelector('.js-break-length');\nconst decreaseBreakBtnElement = document.querySelector('.js-decrease-break-btn');\nconst increaseBreakBtnElement = document.querySelector('.js-increase-break-btn');\nconst sessionLengthElement = document.querySelector('.js-session-length');\nconst decreaseSessionBtnElement = document.querySelector('.js-decrease-session-btn');\nconst increaseSessionBtnElement = document.querySelector('.js-increase-session-btn');\nconst fillElement = document.querySelector('.js-fill');\nconst modeElement = document.querySelector('.js-mode');\nconst remainingTimeElement = document.querySelector('.js-remaining-time');\nconst startBtnElement = document.querySelector('.js-start-btn');\nconst stopBtnElement = document.querySelector('.js-stop-btn');\nconst clearBtnElement = document.querySelector('.js-clear-btn');\nconst versionElement = document.querySelector('.js-version');\n\n/*\n * Variables\n */\n\nlet breakLengthInMinutes = 5;\nlet sessionLengthInMinutes = 25;\nlet startTime;\nlet mode = 'Session';\nlet timerLength = 1500000;\nlet originalTimerLength = 1500000;\nlet remainingTime = 1500000;\nlet isStopped = true;\nlet timerIntervalId;\n\n/*\n * Functions\n */\n\nfunction minutesToMilliseconds(minutes) {\n  return minutes * 60000;\n}\n\nfunction formatTime(time) {\n  const minutes = parseInt((time / 1000) / 60, 10);\n  let seconds = parseInt((time / 1000) % 60, 10);\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n  return `${minutes}:${seconds}`;\n}\n\nfunction updateBreakLength(length) {\n  if (length < 1) {\n    return;\n  }\n\n  breakLengthInMinutes = length;\n  breakLengthElement.innerText = breakLengthInMinutes;\n\n  if (mode === 'Break') {\n    startTime = Date.now();\n    timerLength = minutesToMilliseconds(breakLengthInMinutes);\n    originalTimerLength = timerLength;\n    remainingTime = timerLength;\n    remainingTimeElement.innerText = formatTime(remainingTime);\n    fillElement.style.height = '0%';\n  }\n}\n\nfunction updateSessionLength(length) {\n  if (length < 1) {\n    return;\n  }\n\n  sessionLengthInMinutes = length;\n  sessionLengthElement.innerText = sessionLengthInMinutes;\n\n  if (mode === 'Session') {\n    startTime = Date.now();\n    timerLength = minutesToMilliseconds(sessionLengthInMinutes);\n    originalTimerLength = timerLength;\n    remainingTime = timerLength;\n    remainingTimeElement.innerText = formatTime(remainingTime);\n    fillElement.style.height = '0%';\n  }\n}\n\nfunction switchMode() {\n  if (mode === 'Session') {\n    mode = 'Break';\n    timerLength = minutesToMilliseconds(breakLengthInMinutes);\n  } else {\n    mode = 'Session';\n    timerLength = minutesToMilliseconds(sessionLengthInMinutes);\n  }\n  startTime = Date.now();\n  originalTimerLength = timerLength;\n  remainingTime = timerLength;\n  bodyElement.setAttribute('data-mode', mode);\n  modeElement.innerText = mode;\n}\n\nfunction updateRemainingTime() {\n  const elapsedTime = Date.now() - startTime;\n  remainingTime = timerLength - elapsedTime;\n  remainingTimeElement.innerText = formatTime(remainingTime);\n}\n\nfunction updateFillElement() {\n  const complete = parseInt((originalTimerLength - remainingTime) / originalTimerLength * 100, 10);\n  fillElement.style.height = `${complete}%`;\n}\n\nfunction updateTimer() {\n  if (remainingTime <= 0) {\n    switchMode();\n  }\n  updateRemainingTime();\n  updateFillElement();\n}\n\nfunction handleStartBtnClick() {\n  if (!isStopped) {\n    return;\n  }\n\n  isStopped = false;\n  startTime = Date.now();\n  bodyElement.setAttribute('data-mode', mode);\n  modeElement.innerText = mode;\n  timerIntervalId = setInterval(updateTimer, 200);\n}\n\nfunction handleStopBtnClick() {\n  if (isStopped) {\n    return;\n  }\n\n  clearInterval(timerIntervalId);\n  isStopped = true;\n  timerLength -= Date.now() - startTime;\n}\n\nfunction handleClearBtnClick() {\n  clearInterval(timerIntervalId);\n  isStopped = true;\n  mode = 'Session';\n  timerLength = minutesToMilliseconds(sessionLengthInMinutes);\n  originalTimerLength = timerLength;\n  remainingTime = timerLength;\n  remainingTimeElement.innerText = formatTime(remainingTime);\n  bodyElement.removeAttribute('data-mode');\n  fillElement.style.height = '0%';\n  modeElement.innerText = 'Pomodoro';\n}\n\n/*\n * Initialise\n */\n\nbreakLengthElement.innerText = breakLengthInMinutes;\ndecreaseBreakBtnElement.addEventListener('click', () => updateBreakLength(breakLengthInMinutes - 1));\nincreaseBreakBtnElement.addEventListener('click', () => updateBreakLength(breakLengthInMinutes + 1));\nsessionLengthElement.innerText = sessionLengthInMinutes;\ndecreaseSessionBtnElement.addEventListener('click', () => updateSessionLength(sessionLengthInMinutes - 1));\nincreaseSessionBtnElement.addEventListener('click', () => updateSessionLength(sessionLengthInMinutes + 1));\nmodeElement.innerText = 'Pomodoro';\nremainingTimeElement.innerText = formatTime(timerLength);\nstartBtnElement.addEventListener('click', handleStartBtnClick);\nstopBtnElement.addEventListener('click', handleStopBtnClick);\nclearBtnElement.addEventListener('click', handleClearBtnClick);\nversionElement.innerText = version;\n"]}